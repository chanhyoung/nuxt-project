# Specifies the user and group that the worker processes will run as.
user nginx;

# The number of worker processes. In most cases, setting it to the number of CPU cores is a good starting point.
worker_processes auto;

# Defines the file path for storing the error log.
error_log /var/log/nginx/error.log notice;

# Defines the file path for storing the process ID of the main process.
pid /var/run/nginx.pid;

# Defines the configuration for event handling.
events {
    # The maximum number of connections that can be handled by a worker process simultaneously.
    worker_connections 1024;
}

# Defines the directives for handling HTTP requests.
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Defines the format of the log entries.
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';

    # Sets the path, format, and buffer for the access log.
    access_log /var/log/nginx/access.log main;

    # Enables or disables the use of sendfile().
    sendfile        on;
    # tcp_nopush     on;

    # Sets the timeout for keeping connections alive.
    keepalive_timeout  65;

    # Enables or disables Gzip compression.
    gzip on;

    # Includes any files with a .conf extension from the /etc/nginx/conf.d directory.
    # include /etc/nginx/conf.d/*.conf;

    server {
        listen 80;
        server_name localhost;

        # Defines a location block for handling requests to the root URL.
        location / {
            # Proxies requests to the Nuxt.js development server.
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Defines a location block for handling API requests.
        location /api/ {
            # Rewrites the request URL, removing the /api prefix.
            rewrite ^/api/(.*)$ /$1 break;
            # Proxies requests to the backend server.
            proxy_pass http://localhost:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}